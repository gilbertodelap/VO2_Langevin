%% save data as .mat file
myfile = 'test1.mat';
save(myfile, 

%% plot lattice distortion field
figure(1); 
figpos = get(figure(1),'position');
close(figure(1));
figure(1);
set(figure(1), 'position', figpos)
X2=reshape(X00.*X, Nx,Ny, Nt, 4);

plotdatacube(t, angle(X2(:,:,:, 1)+1i*X2(:,:,:, 3)),[],[-pi,pi],[0,0]); colormap hsv
% plotdatacube(t, (X(:,:,:, 1)),[],[0,1.2],[0,0]); 
axis image
% caxis([-3 3])
% ylim([0, 100])

tfsavedistortion = exist('videofile','var');


%%
% plot distribution in REAL space
tfsavemovie = exist('videofile','var');
if tfsavemovie
    vid = VideoWriter(videofile,'MPEG-4');
    vid.Quality = 50;
    open(vid);
end
% [xx,yy]=ndgrid(1:Nx,1:Ny);
% ss=xx.^2+yy.^2;
figure(11); clf; 
axes
set(gca, 'xlimmode','manual',...
'ylimmode','manual',...
'zlimmode','manual',...
'climmode','manual',...
'alimmode','manual');

X2=reshape(X00.*X, Nx*Ny, Nt, 4);
xmin=min(min(X2(:,:,1)));
xmax=max(max(X2(:,:,1)));
ymin=min(min(X2(:,:,3)));
ymax=max(max(X2(:,:,3)));
% p1=scatter(X2(:,1,1), X2(:,1,3),15,'fill','markerfacecolor',[0.5, 0.2 0.9]);
p1=scatter(X2(:,1,1), X2(:,1,3),15,'fill','markerfacecolor',[0.5, 0.2 0.9]);
% p1=scatter(X2(:,1,1), X2(:,1,3),15,xx(:),'fill');
hold on
title_ = title(sprintf('t = %2.2f ps', t(1)));

xlabel('\Deltax_1')
ylabel('\Deltax_2')
axis image 
xlim([xmin xmax]); ylim([ymin ymax]); 
% axis(ax)
for j=1:1:Nt+1
%%
    set(p1,'xdata', X2(:,j,1), 'ydata', X2(:,j,3))
    title_.String = sprintf('t = %2.2f ps', t(j));
    drawnow; pause(0.02);
    if tfsavemovie
        pause(0.05)
        frame = getframe(gcf);
        writeVideo(vid, frame); 
    end
end
if tfsavemovie
    close(vid);
end



%% plot the crystal dynamics
% filename = 'crystal2D_64x64_16bit.gif';
figure(19); clf; 
hold on
set(gca, 'xlimmode','manual',...
'ylimmode','manual',...
'zlimmode','manual',...
'climmode','manual',...
'alimmode','manual');

% define the range of coordinates to plot
xmin=min(min(X2(:,:,1)))-1;
xmax=max(max(X2(:,:,1)))+22*1;
ymin=min(min(X2(:,:,3)))-1;
ymax=max(max(X2(:,:,3)))+22*1;
p2=scatter(Xcr(:,1,1), Xcr(:,1,2),150,'fill','markerfacecolor',[0.6, 0.6 0.6]);
p1=plot(Xcr(:,2,1), Xcr(:,2,2),'.', 'color',[0.5, 0.2 0.9],'markersize',40);

xlabel('x1')
ylabel('x2')
xlim([xmin xmax/2]); ylim([ymin ymax/2]); 
axis image 
axis([-.2, 22.1*1, -0.2, 22.1*1])

for j=1:2:Nt
%%
    %%
%     j = 1;
%     r1 = [phs(:).*xx(:, j, 1), phs(:).*xx(:, j, 3)] + reshape(rs, N,2);
%     set(p1,'xdata', r1(:,1), 'ydata', r1(:,2))
    set(p1,'xdata', Xcr(:,j,1), 'ydata', Xcr(:,j,2))
    drawnow; 
%     
%     % Capture the plot as an image 
%     frame = getframe(2); 
%     im = frame2im(frame); 
%     [imind,cm] = rgb2ind(im,16); 
% %    % Write to the GIF File 
%     if j == 2 
%       imwrite(imind,cm,filename,'gif', 'Loopcount',inf,'delaytime',0.002); 
%     else 
%       imwrite(imind,cm,filename,'gif','WriteMode','append','delaytime',0.002); 
%     end 

end
% fprintf('Done.\n')


%% 
figure(22); clf
%
ii=98;

% hold all
% rng = [60:90];
% plot(t, (F2max(rng,:))+ (1:length(rng))'.*0.2,'b')
% xlim([-.2, 1])

plot(t, F2max(ii,:),'b')
xlim([-.2, 6])


%% plot intensity in reciprocal space
figure(20); clf
% ii=4000;
idx = [ 600, 800,  1000, 1500, 2000,4000];
% idx = [1, 600, 1500, 3000, 4000];
plot(log(F2mean(:,idx)))
legend(num2str(t(idx)',2))
xlabel('q')
ylabel('Log(I)')
title(['Te = ', num2str(opts.Te)])



%% Plot the diffuse from saved sims

figure(8); clf

% thefiles = dir('output/*.mat');
thefiles = dir('output/*tdep.mat');
kTs = [];
hold all

for ii=1:length(thefiles)
    load([thefiles(ii).folder,'/', thefiles(ii).name],'F2all','opts');
    t = 0:opts.ranges(1)/opts.npoints(1):opts.ranges(1);  t=t(1:end-1);
    kTs = [kTs, opts.kT];
    F2mean = mean(F2all,3);
    F2difuse = mean(F2mean(F2mean(:,12) < 1e2,:),1);
    plot(t, F2difuse./F2difuse(end))
end
xlabel('time')
ylabel('Relative Intensity (arb)')
xlim([0.8, 3])
legend(num2str(1e3*kTs'))


%% Plot the Bragg peaks from saved sims
figure(7); clf

hold all
for ii=1:length(thefiles)
    load([thefiles(ii).folder,'/', thefiles(ii).name],'F2all','opts');
    F2mean = mean(F2all,3);
    F2Bragg = F2mean(1,:);
    plot(t, F2Bragg./F2Bragg(5))
end

xlabel('time')
ylabel('Relative Intensity (arb)')
xlim([0.8, 3])
legend(num2str(1e3*kTs'))

%% 
